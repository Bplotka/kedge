
syntax = "proto3";

package winch.config;

import "github.com/mwitkow/go-proto-validators/validator.proto";

/// Config is the top level configuration message for a winch mapper.
message MapperConfig {
    message Routes {
        repeated Route routes = 1;
    }

    Routes routes = 1 [(validator.field) = {msg_exists : true}];
}

message Route {
    oneof type {
        DirectRoute direct = 1;
        RegexpRoute regexp = 2;
    }
}

/// Simplest routing mechanism using just direct mapping between dns and kedge target.
message DirectRoute {
    string key = 1 [(validator.field) = {msg_exists : true}];
    string kedge_url = 2 [(validator.field) = {msg_exists : true}];
}

message RegexpRoute {
    // Regexp expression that will be applied on given DNS.
    string exp = 1 [(validator.field) = {msg_exists : true}];

    // Kedge URL to be used if we have a match. It can be a string including two variables using
    // go template:
    // - {{ .Cluster }} if cluster_group_name is specified.
    string kedge_url = 2 [(validator.field) = {msg_exists : true}];
    // If specified, target cluster name will be fetched from named regexp group.
    string cluster_group_name = 3;
}