// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: winch/config/mapper.proto

/*
Package winch_config is a generated protocol buffer package.

It is generated from these files:
	winch/config/mapper.proto

It has these top-level messages:
	MapperConfig
	Route
	DirectRoute
	RegexpRoute
*/
package winch_config

import fmt "fmt"
import github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto "github.com/golang/protobuf/proto"
import math "math"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *MapperConfig) Validate() error {
	if nil == this.Routes {
		return github_com_mwitkow_go_proto_validators.FieldError("Routes", fmt.Errorf("message must exist"))
	}
	if this.Routes != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Routes); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Routes", err)
		}
	}
	return nil
}
func (this *MapperConfig_Routes) Validate() error {
	for _, item := range this.Routes {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Routes", err)
			}
		}
	}
	return nil
}
func (this *Route) Validate() error {
	if oneOfNester, ok := this.GetType().(*Route_Direct); ok {
		if oneOfNester.Direct != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Direct); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Direct", err)
			}
		}
	}
	if oneOfNester, ok := this.GetType().(*Route_Regexp); ok {
		if oneOfNester.Regexp != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Regexp); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Regexp", err)
			}
		}
	}
	return nil
}
func (this *DirectRoute) Validate() error {
	return nil
}
func (this *RegexpRoute) Validate() error {
	return nil
}
